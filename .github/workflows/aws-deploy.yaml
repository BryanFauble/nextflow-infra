name: aws-deploy

on:
  push:
    paths-ignore:
      - '**.md'

jobs:
  pre-commit:
    name: Run pre-commit hooks against all files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - uses: pre-commit/action@v2.0.2

  deploy:
    name: Deploy CloudFormation templates and configure Tower
    runs-on: ubuntu-latest
    needs: pre-commit
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        job-environment:
          - workflows-nextflow-dev
          - workflows-nextflow-prod
          - org-sagebase-strides-ampad-workflows
        include:
          - job-environment: workflows-nextflow-dev
            sceptre-suffix: dev
            tower-url: https://tower-dev.sagebionetworks.org
          - job-environment: workflows-nextflow-prod
            sceptre-suffix: prod
            tower-url: https://tower.sagebionetworks.org
          - job-environment: org-sagebase-strides-ampad-workflows
            sceptre-suffix: ampad
            tower-url: https://tower.sagebionetworks.org
    environment: ${{ matrix.job-environment }}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install pipenv
        run: python -m pip install pipenv

      - name: Set up dependency caching
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-v2-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-v2-

      - name: Install dependencies
        if: steps.pipenv-cache.outputs.cache-hit != 'true'
        env:
          PIPENV_NOSPIN: 'true'
          WORKON_HOME: ~/.local/share/virtualenvs
          PIPENV_CACHE_DIR: ~/.local/share/pipcache
        run: |
          pipenv install --dev

      - name: Assume AWS role in dev account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_USER_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.CI_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600

      - name: Deploy common configuration
        run: >
          pipenv run sceptre --var-file=src/sceptre/variables/${{ matrix.sceptre-suffix }}.yaml
          launch common --yes

      - name: Deploy infrastructure configuration
        run: >
          pipenv run sceptre --var-file=src/sceptre/variables/${{ matrix.sceptre-suffix }}.yaml
          launch infra-${{ matrix.sceptre-suffix }} --yes

      - name: Deploy projects configuration
        run: >
          pipenv run sceptre --var-file=src/sceptre/variables/${{ matrix.sceptre-suffix }}.yaml
          launch projects-${{ matrix.sceptre-suffix }} --yes

      - name: Wait for Nextflow Tower to be up
        uses: nev7n/wait_for_response@v1
        with:
          url: ${{ matrix.tower-url }}
          responseCode: 200
          timeout: 1800000  # 30 minutes
          interval: 30000   # 30 seconds

      - name: Configure projects in Tower
        run: pipenv run bin/configure-tower-projects.py config/projects-${{ matrix.sceptre-suffix }}
        env:
          NXF_TOWER_TOKEN: ${{ secrets.TOWER_TOKEN }}
          NXF_TOWER_API_URL: ${{ matrix.tower-url }}/api
